(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{290:function(e,t,o){"use strict";o.r(t);var n=o(0),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"vlite"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vlite"}},[e._v("#")]),e._v(" VLite")]),e._v(" "),o("p",[e._v("VLite is a packet acceleration, protection, stabilization, and forwarding protocol.")]),e._v(" "),o("p",[e._v("It is designed for UDP based traffic with a focus on Peer to Peer applications. It does not support TCP traffic proxying.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("Use router to send only UDP Packet Addr traffic to VLite. Example is shown below:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('"router": {\n    "domainStrategy": "AsIs",\n    "rule": [\n      {\n        "tag": "vlite",\n        "domain": [\n          {\n            "type":"RootDomain",\n            "value": "packet-addr.v2fly.arpa"\n          }\n        ]\n      }\n    ]\n  }\n')])])])]),e._v(" "),o("h2",{attrs:{id:"vlite-udp-outbound"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vlite-udp-outbound"}},[e._v("#")]),e._v(" VLite UDP Outbound")]),e._v(" "),o("ul",[o("li",[e._v("Name: "),o("code",[e._v("vliteu")])]),e._v(" "),o("li",[e._v("Type: Outbound Protocol")]),e._v(" "),o("li",[e._v("ID: "),o("code",[e._v("outbound.vliteu")])])]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("address")]),e._v(": string")])]),e._v(" "),o("p",[e._v("The server address.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("port")]),e._v(": number")])]),e._v(" "),o("p",[e._v("The server port number.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("password")]),e._v(": string")])]),e._v(" "),o("p",[e._v("The password. Need to be same on corresponding server.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("scramblePacket")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable packet scrambling. Need to be the same on the corresponding server.")]),e._v(" "),o("p",[e._v("This will hide the data packet's DTLS signature so that looks like unknown traffic once the handshake is finished.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableFec")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable forward error correction. Need to be the same on the corresponding server.")]),e._v(" "),o("p",[e._v("This will instruct vlite to consume more traffic to compensate for packet loss.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableStabilization")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable unified connection stabilization. Need to be the same on the corresponding server.")]),e._v(" "),o("p",[e._v("This will instruct vlite to stabilise connections actively by reincarnating broken connections by connecting to the server again and recovering connection status when the connection is interrupted.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableRenegotiation")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable unified connection stabilization protocol renegotiation. Need to be the same on the corresponding server.")]),e._v(" "),o("p",[e._v("This will instruct vlite to stabilise by renegotiating stateful protocols while keeping underlying payload connections intact.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("handshakeMaskingPaddingSize")]),e._v(": number")])]),e._v(" "),o("p",[e._v("Whether to mask unified connection stabilization handshake so it appears as random data. Recommended to be the same on the corresponding server.")]),e._v(" "),o("p",[e._v("Write a number to define the packet length to pad the handshake message to.")]),e._v(" "),o("h2",{attrs:{id:"vlite-udp-inbound"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vlite-udp-inbound"}},[e._v("#")]),e._v(" VLite UDP Inbound")]),e._v(" "),o("ul",[o("li",[e._v("Name: "),o("code",[e._v("vliteu")])]),e._v(" "),o("li",[e._v("Type: Inbound Protocol")]),e._v(" "),o("li",[e._v("ID: "),o("code",[e._v("inbound.vliteu")])])]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("scramblePacket")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable packet scrambling. Need to be the same on the corresponding client.")]),e._v(" "),o("p",[e._v("This will hide the data packet's DTLS signature so that looks like unknown traffic once the handshake is finished.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableFec")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable forward error correction. Need to be the same on the corresponding client.")]),e._v(" "),o("p",[e._v("This will instruct vlite to consume more traffic to compensate for packet loss.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableStabilization")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable unified connection stabilization. Need to be the same on the corresponding client.")]),e._v(" "),o("p",[e._v("This will instruct vlite to stabilise connections actively by reincarnating broken connections by connecting to the server again and recovering connection status when the connection is interrupted.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("enableRenegotiation")]),e._v(": true | false")])]),e._v(" "),o("p",[e._v("Whether to enable unified connection stabilization protocol renegotiation. Need to be the same on the corresponding client.")]),e._v(" "),o("p",[e._v("This will instruct vlite to stabilise by renegotiating stateful protocols while keeping underlying payload connections intact.")]),e._v(" "),o("blockquote",[o("p",[o("code",[e._v("handshakeMaskingPaddingSize")]),e._v(": number")])]),e._v(" "),o("p",[e._v("Whether to mask unified connection stabilization handshake so it appears as random data. Recommended to be the same on the corresponding client.")]),e._v(" "),o("p",[e._v("Write a number to define the packet length to pad the handshake message to.")])])}),[],!1,null,null,null);t.default=i.exports}}]);