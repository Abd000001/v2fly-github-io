(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{396:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"inbounds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inbounds"}},[t._v("#")]),t._v(" Inbounds")]),t._v(" "),a("p",[t._v("入站连接用于接收从客户端（浏览器或上一级代理服务器）发来的数据，可用的协议请见协议列表。")]),t._v(" "),a("h2",{attrs:{id:"inboundobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inboundobject"}},[t._v("#")]),t._v(" InboundObject")]),t._v(" "),a("p",[a("code",[t._v("InboundObject")]),t._v(" 对应配置文件中 "),a("code",[t._v("inbounds")]),t._v(" 项的一个子元素。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"listen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"protocol"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"协议名称"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"settings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"streamSettings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tag"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"标识"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sniffing"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"destOverride"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tls"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"metadataOnly"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"allocate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"strategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"refresh"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"concurrency"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("listen")]),t._v(": address")])]),t._v(" "),a("p",[t._v("监听地址，只允许 IP 地址，默认值为 "),a("code",[t._v('"0.0.0.0"')]),t._v("，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。")]),t._v(" "),a("p",[t._v("v4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 "),a("code",[t._v('"/dev/shm/domain.socket"')]),t._v("，可在开头加 "),a("code",[t._v('"@"')]),t._v(" 代表 "),a("a",{attrs:{href:"https://www.man7.org/linux/man-pages/man7/unix.7.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstract"),a("OutboundLink")],1),t._v("，"),a("code",[t._v('"@@"')]),t._v(" 则代表带 padding 的 abstract。")]),t._v(" "),a("p",[t._v("填写 Unix domain socket 时，"),a("code",[t._v("port")]),t._v(" 和 "),a("code",[t._v("allocate")]),t._v(" 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("port")]),t._v(': number | "env:variable" | string')])]),t._v(" "),a("p",[t._v("端口。接受的格式如下:")]),t._v(" "),a("ul",[a("li",[t._v("整型数值：实际的端口号。")]),t._v(" "),a("li",[t._v("环境变量：以 "),a("code",[t._v('"env:"')]),t._v(" 开头，后面是一个环境变量的名称，如 "),a("code",[t._v('"env:PORT"')]),t._v("。V2Ray 会以字符串形式解析这个环境变量。")]),t._v(" "),a("li",[t._v("字符串：可以是一个数值类型的字符串，如 "),a("code",[t._v('"1234"')]),t._v("；或者一个数值范围，如 "),a("code",[t._v('"5-10"')]),t._v(" 表示端口 5 到端口 10，这 6 个端口。")])]),t._v(" "),a("p",[t._v("当只有一个端口时，V2Ray 会在此端口监听入站连接。当指定了一个端口范围时，取决于 "),a("code",[t._v("allocate")]),t._v(" 设置。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("protocol")]),t._v(": string")])]),t._v(" "),a("p",[t._v("连接协议名称，可选的值见协议列表。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("settings")]),t._v(": InboundConfigurationObject")])]),t._v(" "),a("p",[t._v("具体的配置内容，视协议不同而不同。详见每个协议中的 "),a("code",[t._v("InboundConfigurationObject")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("streamSettings")]),t._v(": "),a("RouterLink",{attrs:{to:"/config/transport.html#perproxy"}},[t._v("StreamSettingsObject")]),t._v("。")],1)]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/config/transport.html#perproxy"}},[t._v("底层传输配置")])],1),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("tag")]),t._v(": string")])]),t._v(" "),a("p",[t._v("此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有 "),a("code",[t._v("tag")]),t._v(" 中唯一。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("sniffing")]),t._v(": "),a("a",{attrs:{href:"#sniffingobject"}},[t._v("SniffingObject")])])]),t._v(" "),a("p",[t._v("尝试探测流量的类型")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("allocate")]),t._v(": "),a("a",{attrs:{href:"#allocateobject"}},[t._v("AllocateObject")])])]),t._v(" "),a("p",[t._v("端口分配设置")]),t._v(" "),a("h2",{attrs:{id:"sniffingobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sniffingobject"}},[t._v("#")]),t._v(" SniffingObject")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"destOverride"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tls"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"metadataOnly"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("enabled")]),t._v(": true | false")])]),t._v(" "),a("p",[t._v("是否开启流量探测。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("destOverride")]),t._v(': ["http" | "tls" | "fakedns"]')])]),t._v(" "),a("p",[t._v("当流量为指定类型时，按其中包括的目标地址重置当前连接的目标。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("metadataOnly")]),t._v(": true | false")])]),t._v(" "),a("p",[t._v("是否仅仅使用元数据推断目标地址而不截取流量内容。只有元数据流量目标侦测模块会被激活。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/config/fakedns.html"}},[t._v("虚拟 DNS 服务器")]),t._v(" 是一个元数据流量目标地址侦测模块。其他流量探测模块需要关闭 metadataOnly 才能被激活。")],1)]),t._v(" "),a("h2",{attrs:{id:"allocateobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allocateobject"}},[t._v("#")]),t._v(" AllocateObject")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"strategy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"refresh"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"concurrency"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("strategy")]),t._v(': "always" | "random"')])]),t._v(" "),a("p",[t._v("端口分配策略。"),a("code",[t._v('"always"')]),t._v(" 表示总是分配所有已指定的端口，"),a("code",[t._v("port")]),t._v(" 中指定了多少个端口，V2Ray 就会监听这些端口。"),a("code",[t._v('"random"')]),t._v(" 表示随机开放端口，每隔 "),a("code",[t._v("refresh")]),t._v(" 分钟在 "),a("code",[t._v("port")]),t._v(" 范围中随机选取 "),a("code",[t._v("concurrency")]),t._v(" 个端口来监听。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("refresh")]),t._v(": number")])]),t._v(" "),a("p",[t._v("随机端口刷新间隔，单位为分钟。最小值为 "),a("code",[t._v("2")]),t._v("，建议值为 "),a("code",[t._v("5")]),t._v("。这个属性仅当 "),a("code",[t._v("strategy = random")]),t._v(" 时有效。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("concurrency")]),t._v(": number")])]),t._v(" "),a("p",[t._v("随机端口数量。最小值为 "),a("code",[t._v("1")]),t._v("，最大值为 "),a("code",[t._v("port")]),t._v(" 范围的三分之一。建议值为 "),a("code",[t._v("3")]),t._v("。")])])}),[],!1,null,null,null);s.default=n.exports}}]);