(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{450:function(e,a,s){"use strict";s.r(a);var t=s(11),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"the-first-step-learn-to-compile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-first-step-learn-to-compile"}},[e._v("#")]),e._v(" The first step: learn to compile")]),e._v(" "),s("h2",{attrs:{id:"pre-work"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pre-work"}},[e._v("#")]),e._v(" Pre-work")]),e._v(" "),s("p",[e._v("V2Ray uses "),s("a",{attrs:{href:"https://golang.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Golang"),s("OutboundLink")],1),e._v(" as the main programming language, and the team release process uses "),s("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions"),s("OutboundLink")],1),e._v(" as the build tool. It is recommended to use Linux or macOS for development. A small amount of scripts may not run properly on Windows.")]),e._v(" "),s("ul",[s("li",[e._v("Install Golang: "),s("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("golang.org/doc/install"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"multiple-build-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multiple-build-methods"}},[e._v("#")]),e._v(" Multiple build methods")]),e._v(" "),s("h3",{attrs:{id:"pull-v2ray-source-code-and-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull-v2ray-source-code-and-dependencies"}},[e._v("#")]),e._v(" Pull V2Ray source code and dependencies")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/v2fly/v2ray-core.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" v2ray-core "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" go mod download\n")])])]),s("p",[e._v("Note: In the network environment where Google cannot be accessed normally, and dependencies cannot be pulled normally, you need to set "),s("code",[e._v("GOPROXY")]),e._v(" first:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("go "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" -w "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOPROXY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://goproxy.io,direct\n")])])]),s("h3",{attrs:{id:"manual-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manual-build"}},[e._v("#")]),e._v(" Manual build")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("The commands in this section need to be run in the root directory of the V2Ray project.")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CGO_ENABLED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" go build -o "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/v2ray -trimpath -ldflags "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s -w -buildid="')]),e._v(" ./main\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CGO_ENABLED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" go build -o "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/v2ctl -trimpath -ldflags "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s -w -buildid="')]),e._v(" -tags confonly ./infra/control/main\n")])])]),s("p",[e._v("Running the above command will generate the newly-built "),s("code",[e._v("v2ray")]),e._v(" and "),s("code",[e._v("v2ctl")]),e._v(" executable files in the current user's "),s("code",[e._v("$HOME")]),e._v(" directory, which can be used normally.")]),e._v(" "),s("p",[e._v("Building executable files for other CPU architectures and other systems (Windows/macOS) belongs to the cross-compilation process of Golang, which mainly controls the two environment variables "),s("code",[e._v("GOOS")]),e._v(" / "),s("code",[e._v("GOARCH")]),e._v(". For details, please refer to Golang related documents.")]),e._v(" "),s("p",[e._v("The following demonstrates how to build executable files of "),s("code",[e._v("v2ray.exe")]),e._v(", "),s("code",[e._v("wv2ray.exe")]),e._v(", and "),s("code",[e._v("v2ctl.exe")]),e._v(" that can run on Windows 64-bit systems (non-Windows systems do not need to compile "),s("code",[e._v("wv2ray.exe")]),e._v("):")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CGO_ENABLED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 go build -o "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/v2ray.exe -trimpath -ldflags "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s -w -buildid="')]),e._v(" ./main\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CGO_ENABLED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 go build -o "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/wv2ray.exe -trimpath -ldflags "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s -w -H windowsgui -buildid="')]),e._v(" ./main\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CGO_ENABLED")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOOS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("windows "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOARCH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("amd64 go build -o "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/v2ctl.exe -trimpath -ldflags "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s -w -buildid="')]),e._v(" -tags confonly ./infra/control/main\n")])])]),s("p",[e._v("Execute "),s("code",[e._v("go tool dist list")]),e._v(" to view all supported systems and architectures. Some architectures also need to control other environment variables, such as the "),s("code",[e._v("GOARM")]),e._v(" of "),s("code",[e._v("arm")]),e._v(", which is used to set the version of the CPU floating-point coprocessor at runtime.")]),e._v(" "),s("h3",{attrs:{id:"script-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-build"}},[e._v("#")]),e._v(" Script build")]),e._v(" "),s("p",[e._v("The above manual construction is only the v2ray executable program itself. The distribution package also contains address libraries ("),s("code",[e._v("geoip.dat")]),e._v(", "),s("code",[e._v("geosite.dat")]),e._v("), configuration files and other files. Using packaging scripts can easily produce release packages suitable for multiple operating systems and multiple CPU architectures.")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" https://raw.githubusercontent.com/v2fly/v2ray-core/master/release/user-package.sh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("755")]),e._v(" user-package.sh\n./user-package.sh\n")])])]),s("p",[e._v("Execute the above script directly to generate an executable file suitable for 64-bit linux operating system in the current directory. The file name is similar to "),s("code",[e._v("v2ray-custom-linux-amd64-20201008-104530.zip")]),e._v(", which is the release package.")]),e._v(" "),s("p",[e._v("You can also use some personalized parameters to customize the release package:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("windows")]),e._v(" build a release package for the Windows version")]),e._v(" "),s("li",[s("code",[e._v("darwin")]),e._v(" build the release package of darwin (macOS) version")]),e._v(" "),s("li",[s("code",[e._v("tgz")]),e._v(" release package uses "),s("code",[e._v("tar.gz")]),e._v(" format")]),e._v(" "),s("li",[s("code",[e._v("386")]),e._v(" Build a 32-bit executable")]),e._v(" "),s("li",[s("code",[e._v("arm")]),e._v(" build executable file suitable for arm architecture CPU")]),e._v(" "),s("li",[s("code",[e._v("mips")]),e._v(" build executable files suitable for mips architecture CPU, please refer to Golang cross-compilation document")]),e._v(" "),s("li",[s("code",[e._v("nodat")]),e._v(" does not include domain name/IP database "),s("code",[e._v("geoip.dat")]),e._v(", "),s("code",[e._v("geosite.dat")]),e._v(" (can reduce the size of the release package)")]),e._v(" "),s("li",[s("code",[e._v("noconf")]),e._v(" does not include example JSON, Systemd/Systemv and other configuration files")]),e._v(" "),s("li",[s("code",[e._v("nosource")]),e._v(" Do not pull the V2Ray source code from the remote end (this option is suitable for the situation where the V2Ray source code is available locally. You must enter the local v2ray code root directory before running the script)")])]),e._v(" "),s("p",[e._v("The above parameters have no order requirements, only need to be passed to the script as needed. The following is an example of building a release package suitable for 32-bit Windows operating system, without address library and without sample configuration:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("./user-package.sh windows "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("386")]),e._v(" nodat noconf\n")])])]),s("p",[e._v("For the v2ray built by the script, the startup information will become the time when the user was compiled to distinguish:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("V2Ray "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.30")]),e._v(".0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20201008")]),e._v("-104530\nA unified platform "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" anti-censorship.\n")])])]),s("p",[e._v("Users can also customize the "),s("code",[e._v("codename")]),e._v(" to customize their own version:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("./user-package.sh windows "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("386")]),e._v(" nodat noconf "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("codename")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("custom-codename\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);