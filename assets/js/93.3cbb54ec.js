(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{296:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[t._v("#")]),t._v(" Stream")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"transport"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"transportSettings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"security"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"securitySettings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("transport")]),t._v(": name of "),s("code",[t._v("<transport>")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("transportSettings")]),t._v(": settings of "),s("code",[t._v("<transport>")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("security")]),t._v(": name of "),s("code",[t._v("<security>")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("securitySettings")]),t._v(": settings of "),s("code",[t._v("<security>")])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("socketSettings")]),t._v(": "),s("a",{attrs:{href:"#SocketConfigObject"}},[t._v("SocketConfigObject")])])]),t._v(" "),s("h3",{attrs:{id:"supported-streams"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#supported-streams"}},[t._v("#")]),t._v(" Supported Streams")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/en_US/v5/config/stream/websocket.html"}},[t._v("WebSocket")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en_US/v5/config/stream/kcp.html"}},[t._v("mKCP")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en_US/v5/config/stream/tcp.html"}},[t._v("tcp")])],1)]),t._v(" "),s("h2",{attrs:{id:"tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls"}},[t._v("#")]),t._v(" TLS")]),t._v(" "),s("p",[t._v("security.tls")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("serverName")]),t._v(": string")])]),t._v(" "),s("p",[t._v("The server name indication domain name for TLS connection.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("nextProtocol")]),t._v(" : [string]")])]),t._v(" "),s("p",[t._v("The ALPN for TLS connections.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("disableSystemRoot")]),t._v(": true | false")])]),t._v(" "),s("p",[t._v("Whether system level Certificate Authority Store should be trusted.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("pinnedPeerCertificateChainSha256")]),t._v(" : [string]")])]),t._v(" "),s("p",[t._v("Pinned Peer Certificate Chain SHA256 Hash. Should be represented in base64 format.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("certificate")]),t._v(": "),s("a",{attrs:{href:"#CertificateObject"}},[t._v("CertificateObject")])])]),t._v(" "),s("p",[t._v("#CertificateObject")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("usage")]),t._v(" : string")])]),t._v(" "),s("p",[t._v("The purpose of the certificate.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v('"ENCIPHERMENT"')]),t._v(": The certificate is used for TLS authentication and encryption.")]),t._v(" "),s("li",[s("code",[t._v('"AUTHORITY_VERIFY"')]),t._v(": The certificate is used to verify the remote TLS certificate. When using this option, the current certificate must be a CA certificate.")]),t._v(" "),s("li",[s("code",[t._v('"AUTHORITY_VERIFY_CLIENT"')]),t._v(": : The certificate is used to verify the remote TLS client certificate. When using this option, the current certificate must be a CA certificate.")]),t._v(" "),s("li",[s("code",[t._v('"AUTHORITY_ISSUE"')]),t._v(": The certificate is used to issue other certificates. When using this option, the current certificate must be a CA certificate.")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Certificate")]),t._v(": string")])]),t._v(" "),s("p",[t._v("The Certificate file in PEM format.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Key")]),t._v(": string")])]),t._v(" "),s("p",[t._v("The Certificate private key file in PEM format.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("certificateFile")]),t._v(": string")])]),t._v(" "),s("p",[t._v("The path for the Certificate file.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("keyFile")]),t._v(": string")])]),t._v(" "),s("p",[t._v("The path for the Certificate private key file.")])])}),[],!1,null,null,null);e.default=a.exports}}]);