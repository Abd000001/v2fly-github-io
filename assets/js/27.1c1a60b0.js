(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{405:function(t,a,o){"use strict";o.r(a);var n=o(9),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,o=t._self._c||a;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"loopback"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#loopback"}},[t._v("#")]),t._v(" Loopback")]),t._v(" "),o("ul",[o("li",[t._v("名称："),o("code",[t._v("loopback")])]),t._v(" "),o("li",[t._v("类型：出站协议")])]),t._v(" "),o("p",[t._v("loopback 是一个出站协议，它可以使出站连接重新路由，等价于 "),o("code",[t._v("dokodemo")]),t._v(" + 改变出站连接的地址。\n减少在实现相同功能的情况下，对系统资源的占用。")]),t._v(" "),o("p",[t._v("对于本出站协议，部分出站连接选项不会被应用。")]),t._v(" "),o("p",[t._v("(v4.36.0+)")]),t._v(" "),o("h2",{attrs:{id:"outboundconfigurationobject"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#outboundconfigurationobject"}},[t._v("#")]),t._v(" OutboundConfigurationObject")]),t._v(" "),o("div",{staticClass:"language-json extra-class"},[o("pre",{pre:!0,attrs:{class:"language-json"}},[o("code",[o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),o("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inboundTag"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reentry"')]),t._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),o("blockquote",[o("p",[o("code",[t._v("inboundTag")]),t._v(": string")])]),t._v(" "),o("p",[t._v("进行重新路由时的入站来源标志。")])])}),[],!1,null,null,null);a.default=s.exports}}]);